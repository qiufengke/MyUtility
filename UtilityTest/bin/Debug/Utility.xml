<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Utility</name>
    </assembly>
    <members>
        <member name="T:Utility.AlgorithmHelper">
            <summary>
            算法辅助类
            </summary>
        </member>
        <member name="M:Utility.AlgorithmHelper.SimpleInsertSort(System.Int32[])">
            <summary>
            算法实现：直接插入排序
            </summary>
            <param name="a"></param>
        </member>
        <member name="M:Utility.AlgorithmHelper.PrintRange(Utility.BsTree,System.Int32,System.Int32,System.Int32@)">
            <summary>
            求节点值在 [min,max] 之间的所有节点
            从小到大顺序输出
            二叉树特点： 左子树节点值《 父节点值《 右子树节点值
            </summary>
            <param name="root"></param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="count">无实际意义，用于记录循环次数</param>
        </member>
        <member name="T:Utility.BsTree">
            <summary>
            二叉树
            </summary>
        </member>
        <member name="T:Utility.OrmHelper">
            <summary>
            ORM 映射类
            </summary>
        </member>
        <member name="M:Utility.OrmHelper.MapToModel``1(System.Data.IDataReader,System.Collections.Generic.List{System.String})">
            <summary>
            将 DataReader 转化为 对应实体对象 ,只对属性赋值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dataReader"></param>
            <param name="onlyFields">需要转换的特定字段</param>
            <returns></returns>
        </member>
        <member name="M:Utility.OrmHelper.MapToList``1(System.Data.IDataReader,System.Collections.Generic.List{System.String})">
            <summary>
            将 DataReader 转化为 实体对象集合
            </summary>
            <param name="dataReader"></param>
            <param name="onlyFields"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Utility.EnumHelper">
            <summary>
            枚举辅助类
            </summary>
        </member>
        <member name="M:Utility.EnumHelper.GetDesciption(System.Enum)">
            <summary>
            获取枚举值的描述
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Utility.PinYinHelper">
            <summary>
            拼音辅助类
            </summary>
        </member>
        <member name="M:Utility.PinYinHelper.GetFirst(System.Char)">
            <summary>
            取拼音第一个字段
            </summary>        
            <param name="ch"></param>        
            <returns></returns>        
        </member>
        <member name="M:Utility.PinYinHelper.GetFirst(System.String)">
            <summary>
            取拼音第一个字段
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Utility.PinYinHelper.Get(System.Char)">
            <summary>
            获取单字拼音
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:Utility.PinYinHelper.ConvertToPinyin(System.String)">
            <summary>
            把汉字转换成拼音(全拼)
            </summary>
            <param name="str">汉字字符串</param>
            <returns>转换后的拼音(全拼)字符串</returns>
        </member>
        <member name="F:Utility.PinYinHelper.otherChinese">
            <summary>
            二级汉字数组
            </summary>
        </member>
        <member name="F:Utility.PinYinHelper.otherPinYin">
            <summary>
            二级汉字对应拼音数组
            </summary>
        </member>
        <member name="M:Utility.WebHelper.GetMd5(System.String)">
            <summary>
            MD5计算
            </summary>
            <param name="str">需要计算MD5的字符串</param>
            <returns>32位的字符串</returns>
        </member>
    </members>
</doc>
